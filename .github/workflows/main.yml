name: Build Canonical for Lean

on: workflow_dispatch

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            lib_path: target/release/libcanonical_lean.so
          - os: macos-latest
            lib_path: target/release/libcanonical_lean.dylib
          - os: windows-latest
            lib_path: target/x86_64-pc-windows-gnu/release/canonical_lean.dll

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Install elan
        shell: bash
        run: |
          curl https://raw.githubusercontent.com/leanprover/elan/master/elan-init.sh -sSf |
            sh -s -- -y --default-toolchain none
          rm -f elan-init
          echo "$HOME/.elan/bin" >>"$GITHUB_PATH"

      - name: Install Lean
        shell: bash
        run: |
          line=$(cat lean/lean-toolchain)
          version=${line#*:}
          elan toolchain install "$version"
          elan default "$version"

      - name: Add Lean to PATH (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: echo "$env:USERPROFILE\.elan\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Build canonical (Windows)
        if: runner.os == 'Windows'
        run: |
          prefix=$(lean --print-prefix)
          echo "[target.x86_64-pc-windows-gnu]" > .cargo/config.toml
          echo "linker = '${prefix}\\bin\\clang.exe'" >> .cargo/config.toml
          cargo build -p canonical_lean --release --target x86_64-pc-windows-gnu

      - name: Build canonical
        if: runner.os != 'Windows'
        run: cargo build -p canonical_lean --release

      - name: Upload built library
        run: gh release upload lean "${{ matrix.lib_path }}"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}